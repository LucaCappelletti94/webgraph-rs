include!(concat!(env!("OUT_DIR"), "/bindings.rs"));
use anyhow::Result;
use std::ffi::CString;
/// Minimal perfect hash structure wrapping the C implementation
/// that reads Java-generated, dumped structures. The actual structure
/// is generated by bindgen.
///
/// To obtain a file that can be read by this structure, load
/// the Java instance of the MPH and write it to a file
/// using the `dump` method.
impl mph {
    pub fn load(path: &str) -> Result<Self> {
        unsafe {
            load_mph(CString::new(path)?.as_c_str().as_ptr() as *const u8)
                .as_ref()
                .map(|m| *m)
                .ok_or(anyhow::anyhow!("Cannot load MPH"))
        }
    }

    pub fn get(&self, key: &str) -> usize {
        unsafe { mph_get_byte_array(self, key.as_ptr(), key.len() as u64) as usize }
    }

    pub fn size(&self) -> usize {
        self.size as usize
    }
}
